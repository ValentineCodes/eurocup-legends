/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Shirts, ShirtsInterface } from "../../../contracts/tokens/Shirts";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_prizePool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_MsgValueDisallowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "storedData",
        type: "bytes",
      },
    ],
    name: "InvalidExtensionAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InvalidFunctionSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenNameNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenSymbolNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenTypeNotEditable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
    ],
    name: "LSP8BatchCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotSendToAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotUseAddressZeroAsOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8InvalidTransferBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8NonExistentTokenId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8NonExistingOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LSP8NotTokenOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LSP8NotTokenOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP8NotifyTokenReceiverIsEOA",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8OperatorAlreadyAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8RevokeOperatorNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenContractCannotHoldValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8TokenIdAlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdFormatNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdsDataEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdsDataLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenOwnerCannotBeOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "LSP8TokenOwnerChanged",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "NoExtensionFoundForFunctionSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
    ],
    name: "OwnableCallerNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableCannotSetZeroAddressAsOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorAuthorizationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "notified",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ShirtsMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "TokenIdDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_MINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "authorizeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "batchCalls",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tokenIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatchForTokenIds",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getDataForTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "getOperatorsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrizePool",
    outputs: [
      {
        internalType: "address",
        name: "_prizePool",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "isOperatorFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "notify",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tokenIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatchForTokenIds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setDataForTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "tokenIdsOf",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "tokenOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenId",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "force",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620034e7380380620034e783398101604081905262000034916200044e565b8484846001600084848484816001600160a01b03811662000068576040516306b620db60e21b815260040160405180910390fd5b6200007381620001ca565b506040805180820190915260048152632936598960e21b6020820152620000bc907feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c9062000238565b620000e87fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18562000238565b620001147f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568462000238565b60408051602081018390526200015d917fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3910160408051601f1981840301815291905262000238565b50506040805160208101859052620001aa93507ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d92500160408051601f1981840301815291905262000291565b5050506001600160a01b039093166080525060a052506200067792505050565b6000546001600160a01b038281169116146200023557600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b600082815260016020526040902062000252828262000576565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405162000285919062000642565b60405180910390a25050565b6200029d8282620002a1565b5050565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201620002e2576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016200032357604051630eceab6760e31b815260040160405180910390fd5b7f1fd9e056a24d14c4abc642fcc325992a946906d0dbc57dd70278aaf12842024d82016200023857604051634ef6d7fb60e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003975781810151838201526020016200037d565b50506000910152565b600082601f830112620003b257600080fd5b81516001600160401b0380821115620003cf57620003cf62000364565b604051601f8301601f19908116603f01168101908282118183101715620003fa57620003fa62000364565b816040528381528660208588010111156200041457600080fd5b620004278460208301602089016200037a565b9695505050505050565b80516001600160a01b03811681146200044957600080fd5b919050565b600080600080600060a086880312156200046757600080fd5b85516001600160401b03808211156200047f57600080fd5b6200048d89838a01620003a0565b96506020880151915080821115620004a457600080fd5b50620004b388828901620003a0565b945050620004c46040870162000431565b9250620004d46060870162000431565b9150608086015190509295509295909350565b600181811c90821680620004fc57607f821691505b6020821081036200051d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200057157600081815260208120601f850160051c810160208610156200054c5750805b601f850160051c820191505b818110156200056d5782815560010162000558565b5050505b505050565b81516001600160401b0381111562000592576200059262000364565b620005aa81620005a38454620004e7565b8462000523565b602080601f831160018114620005e25760008415620005c95750858301515b600019600386901b1c1916600185901b1785556200056d565b600085815260208120601f198616915b828110156200061357888601518255948401946001909101908401620005f2565b5085821015620006325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620006638160408501602087016200037a565b601f01601f19169190910160400192915050565b60805160a051612e3c620006ab6000396000818161050f01526108e80152600081816104ab01526109800152612e3c6000f3fe6080604052600436106101bb5760003560e01c80637e87632c116100ec578063a3b261f21161008a578063db8c966311610064578063db8c9663146105a0578063dedff9c6146105c0578063f0292a03146105e0578063f2fde38b146105f557610216565b8063a3b261f214610533578063be9f0e6f14610560578063d6c1407c1461058057610216565b8063884bf67c116100c6578063884bf67c1461049c5780638da5cb5b146104cf57806397902421146104ed57806398d5fdca1461050057610216565b80637e87632c146104495780637f23690c1461046957806386a10ddd1461047c57610216565b806340c10f191161015957806354f6127f1161013357806354f6127f146103d45780636963d438146103f457806370a0823114610414578063715018a61461043457610216565b806340c10f191461037257806349a6078d14610387578063511b6952146103b457610216565b80631d26fce6116101955780631d26fce6146102d8578063217b2270146103055780632a3654a41461033d57806332cb6b0c1461035d57610216565b806301ffc9a71461025757806316e023b31461028c57806318160ddd146102b957610216565b3661021657346000036101fd5760405163e5099ee360e01b81526004016101f49060208082526004908201526000604082015260600190565b60405180910390fd5b6040516330fa4a2160e11b815260040160405180910390fd5b6000366060600482101561024157828260405163e5099ee360e01b81526004016101f49291906120bf565b61024b8383610615565b80519350602001915050f35b34801561026357600080fd5b506102776102723660046120ee565b61070b565b60405190151581526020015b60405180910390f35b34801561029857600080fd5b506102ac6102a7366004612118565b61073f565b604051610283919061218a565b3480156102c557600080fd5b506002545b604051908152602001610283565b3480156102e457600080fd5b506102f86102f3366004612271565b610752565b60405161028391906122d4565b34801561031157600080fd5b50610325610320366004612336565b610839565b6040516001600160a01b039091168152602001610283565b34801561034957600080fd5b5061027761035836600461236b565b610872565b34801561036957600080fd5b506102ca606481565b61038561038036600461236b565b61087e565b005b34801561039357600080fd5b506103a76103a2366004612336565b610a57565b6040516102839190612395565b3480156103c057600080fd5b506103856103cf36600461246a565b610a79565b3480156103e057600080fd5b506102ac6103ef366004612336565b610abd565b34801561040057600080fd5b506102f861040f3660046124e2565b610ac8565b34801561042057600080fd5b506102ca61042f366004612556565b610bf7565b34801561044057600080fd5b50610385610c18565b34801561045557600080fd5b506103856104643660046126b4565b610c2c565b610385610477366004612778565b610d1b565b34801561048857600080fd5b506103856104973660046127b4565b610d50565b3480156104a857600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610325565b3480156104db57600080fd5b506000546001600160a01b0316610325565b6103856104fb36600461280a565b610eca565b34801561050c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102ca565b34801561053f57600080fd5b5061055361054e366004612556565b610f8a565b6040516102839190612863565b34801561056c57600080fd5b5061038561057b36600461289b565b610fae565b34801561058c57600080fd5b5061038561059b366004612918565b611079565b3480156105ac57600080fd5b506103856105bb366004612951565b61108c565b3480156105cc57600080fd5b506102f86105db3660046129b8565b611170565b3480156105ec57600080fd5b506102ca600581565b34801561060157600080fd5b50610385610610366004612556565b61121a565b6060600061062e6000356001600160e01b031916611255565b5090506001600160a01b0381166106665760405163bb370b2b60e01b81526001600160e01b03196000351660048201526024016101f4565b600080826001600160a01b0316348787333460405160200161068b94939291906129ec565b60408051601f19818403018152908290526106a591612a17565b60006040518083038185875af1925050503d80600081146106e2576040519150601f19603f3d011682016040523d82523d6000602084013e6106e7565b606091505b509150915081156106fc579250610705915050565b80518060208301fd5b92915050565b60006001600160e01b03198216631d138b8360e11b14806107305750610730826112d3565b806107055750610705826112f8565b606061074b838361132f565b9392505050565b60608151835114610776576040516317d38eff60e11b815260040160405180910390fd5b82516001600160401b0381111561078f5761078f61219d565b6040519080825280602002602001820160405280156107c257816020015b60608152602001906001900390816107ad5790505b50905060005b83518110156108325761080d8482815181106107e6576107e6612a33565b602002602001015184838151811061080057610800612a33565b602002602001015161132f565b82828151811061081f5761081f612a33565b60209081029190910101526001016107c8565b5092915050565b6000818152600360205260408120546001600160a01b03168061070557604051635747cd1b60e11b8152600481018490526024016101f4565b600061074b83836113dd565b60648160025461088e9190612a5f565b11156108ad57604051635b21dfd360e11b815260040160405180910390fd5b6005816108b984610bf7565b6108c39190612a5f565b11156108e257604051635b21dfd360e11b815260040160405180910390fd5b61090c817f0000000000000000000000000000000000000000000000000000000000000000612a72565b341461092b5760405163020b5e0b60e11b815260040160405180910390fd5b60005b8181101561097b57600060025460016109479190612a5f565b9050610968848260001b60006040518060200160405280600081525061141a565b508061097381612a89565b91505061092e565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163460405160006040518083038185875af1925050503d80600081146109e9576040519150601f19603f3d011682016040523d82523d6000602084013e6109ee565b606091505b5050905080610a10576040516312171d8360e31b815260040160405180910390fd5b604080516001600160a01b0385168152602081018490527f2d6f147bcef20580d606c930254442a27952b0caec97caaba61b00b5dd67bba9910160405180910390a1505050565b6060610a628261158a565b6000828152600560205260409020610705906115c2565b610a8333846113dd565b610aa957604051631294d2a960e01b8152600481018490523360248201526044016101f4565b610ab685858585856115cf565b5050505050565b6060610705826117b1565b6060816001600160401b03811115610ae257610ae261219d565b604051908082528060200260200182016040528015610b1557816020015b6060815260200190600190039081610b005790505b50905060005b828110156108325760008030868685818110610b3957610b39612a33565b9050602002810190610b4b9190612aa2565b604051610b59929190612aef565b600060405180830381855af49150503d8060008114610b94576040519150601f19603f3d011682016040523d82523d6000602084013e610b99565b606091505b509150915081610bcf57805115610bb35780518082602001fd5b60405163234eb81960e01b8152600481018490526024016101f4565b80848481518110610be257610be2612a33565b60209081029190910101525050600101610b1b565b6001600160a01b038116600090815260046020526040812061070590611853565b610c2061185d565b610c2a6000611899565b565b8451845181141580610c3f575083518114155b80610c4b575082518114155b80610c57575081518114155b15610c75576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610d1257610d0a878281518110610c9557610c95612a33565b6020026020010151878381518110610caf57610caf612a33565b6020026020010151878481518110610cc957610cc9612a33565b6020026020010151878581518110610ce357610ce3612a33565b6020026020010151878681518110610cfd57610cfd612a33565b6020026020010151610a79565b600101610c78565b50505050505050565b610d2361185d565b3415610d425760405163f36ba73760e01b815260040160405180910390fd5b610d4c8282611907565b5050565b6000610d5b83610839565b90506001600160a01b0381163314610d9e57604051632d938f5160e11b81526001600160a01b0382166004820152602481018490523360448201526064016101f4565b6001600160a01b038416610dc557604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b031603610df7576040516344fed6b160e11b815260040160405180910390fd5b6000838152600560205260408120610e0f9086611951565b905080610e41576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016101f4565b83826001600160a01b0316866001600160a01b03167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc23667121586604051610e85919061218a565b60405180910390a460003385600186604051602001610ea79493929190612aff565b6040516020818303038152906040529050610ec28682611966565b505050505050565b610ed261185d565b3415610ef15760405163f36ba73760e01b815260040160405180910390fd5b8051825114610f1357604051633bcc897960e01b815260040160405180910390fd5b8151600003610f35576040516397da5f9560e01b815260040160405180910390fd5b60005b8251811015610f8557610f7d838281518110610f5657610f56612a33565b6020026020010151838381518110610f7057610f70612a33565b6020026020010151611907565b600101610f38565b505050565b6001600160a01b0381166000908152600460205260409020606090610705906115c2565b610fb661185d565b81518351141580610fc957508051825114155b15610fe7576040516317d38eff60e11b815260040160405180910390fd5b8251600003611009576040516380c9830560e01b815260040160405180910390fd5b60005b83518110156110735761106b84828151811061102a5761102a612a33565b602002602001015184838151811061104457611044612a33565b602002602001015184848151811061105e5761105e612a33565b6020026020010151611991565b60010161100c565b50505050565b61108161185d565b610f85838383611991565b600061109784610839565b9050336001600160a01b038216146110ea576001600160a01b03851633146110ea5760405163760b5acd60e01b81523360048201526001600160a01b0382166024820152604481018590526064016101f4565b6001600160a01b03851661111157604051639577b8b360e01b815260040160405180910390fd5b846001600160a01b0316816001600160a01b031603611143576040516344fed6b160e11b815260040160405180910390fd5b61115085828686866119f3565b8215610ab65760008185600085604051602001610ea79493929190612aff565b606081516001600160401b0381111561118b5761118b61219d565b6040519080825280602002602001820160405280156111be57816020015b60608152602001906001900390816111a95790505b50905060005b8251811015611214576111ef8382815181106111e2576111e2612a33565b60200260200101516117b1565b82828151811061120157611201612a33565b60209081029190910101526001016111c4565b50919050565b61122261185d565b6001600160a01b038116611249576040516306b620db60e21b815260040160405180910390fd5b61125281611899565b50565b6000808061127a696773c5a04a6d4300884b60b11b6001600160e01b03198616611a93565b90506000611287826117b1565b9050805160141415801561129b5750805115155b156112bb57806040516342bfe79f60e01b81526004016101f4919061218a565b6112c481612b38565b60601c95600195509350505050565b60006001600160e01b0319821663a918fa6b60e01b1480610705575061070582611ae7565b60008061130b6301ffc9a760e01b611255565b5090506001600160a01b0381166113255750600092915050565b61074b8184611b1c565b6000828152600660209081526040808320848452909152902080546060919061135790612b6f565b80601f016020809104026020016040519081016040528092919081815260200182805461138390612b6f565b80156113d05780601f106113a5576101008083540402835291602001916113d0565b820191906000526020600020905b8154815290600101906020018083116113b357829003601f168201915b5050505050905092915050565b60006113e882610839565b6001600160a01b0316836001600160a01b0316148061074b5750600082815260056020526040902061074b9084611ba6565b6001600160a01b038416611441576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561147a576040516334c7b51160e01b8152600481018490526024016101f4565b6000838152600360205260409020546001600160a01b0316156114b3576040516334c7b51160e01b8152600481018490526024016101f4565b6002600081546114c290612a89565b909155506001600160a01b03841660009081526004602052604090206114e89084611bc8565b5060008381526003602052604080822080546001600160a01b0319166001600160a01b03881690811790915590518592907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061154a90339088908890612ba3565b60405180910390a4600033600086868560405160200161156e959493929190612bd8565b6040516020818303038152906040529050610ab6858483611bd4565b6000818152600360205260409020546001600160a01b031661125257604051635747cd1b60e11b8152600481018290526024016101f4565b6060600061074b83611cdc565b60006115da84610839565b9050856001600160a01b0316816001600160a01b03161461162857604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016101f4565b6001600160a01b03851661164f576040516324ecef4d60e01b815260040160405180910390fd5b600061165a85610839565b9050806001600160a01b0316826001600160a01b0316146116a857604051635a9c31d360e01b8152600481018690526001600160a01b038084166024830152821660448201526064016101f4565b6116b28786611d37565b6001600160a01b03871660009081526004602052604090206116d49086611d8f565b506001600160a01b03861660009081526004602052604090206116f79086611bc8565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061175e9033908a908a90612ba3565b60405180910390a460003388888887604051602001611781959493929190612bd8565b604051602081830303815290604052905061179c8882611d9b565b6117a7878683611bd4565b5050505050505050565b60008181526001602052604090208054606091906117ce90612b6f565b80601f01602080910402602001604051908101604052809291908181526020018280546117fa90612b6f565b80156118475780601f1061181c57610100808354040283529160200191611847565b820191906000526020600020905b81548152906001019060200180831161182a57829003601f168201915b50505050509050919050565b6000610705825490565b336118706000546001600160a01b031690565b6001600160a01b031614610c2a5760405163bf1169c560e01b81523360048201526024016101f4565b6000546001600160a01b0382811691161461125257600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b7f098a16c9e50e3e99b3e797305c146898d294e5aec55a47e213cb3611ccf17e73820161194757604051631b32400560e11b815260040160405180910390fd5b610d4c8282611dc6565b600061074b836001600160a01b038416611dd0565b610d4c827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097083611e1f565b600083815260066020908152604080832085845290915290206119b48282612c59565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516119e6919061218a565b60405180910390a3505050565b6000838152600560205260408120611a0b9087611e6c565b905080611a3d576040516312a8c6a360e21b81526001600160a01b0387166004820152602481018590526044016101f4565b83856001600160a01b0316876001600160a01b03167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c8686604051611a83929190612d18565b60405180910390a4505050505050565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c83015291829101604051602081830303815290604052905080611adf90612d33565b949350505050565b60006001600160e01b031982166318a6a9a560e21b148061070557506301ffc9a760e01b6001600160e01b0319831614610705565b6040516001600160e01b031982166024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b03166301ffc9a760e01b178152825192935060009283928392909183918a617530fa92503d91506000519050828015611b8f575060208210155b8015611b9b5750600081115b979650505050505050565b6001600160a01b0381166000908152600183016020526040812054151561074b565b600061074b8383611dd0565b611be583631aed5a8560e21b611b1c565b15611c7f57604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611c38907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612d57565b6000604051808303816000875af1158015611c57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110739190810190612d70565b81610f85576001600160a01b0383163b15611cb857604051634349776d60e01b81526001600160a01b03841660048201526024016101f4565b604051630317313760e01b81526001600160a01b03841660048201526024016101f4565b60608160000180548060200260200160405190810160405280929190818152602001828054801561184757602002820191906000526020600020905b815481526020019060010190808311611d185750505050509050919050565b600081815260056020526040812090611d4f82611853565b90506000805b82811015610ec257611d68846000611e81565b9150611d878287876000604051806020016040528060008152506119f3565b600101611d55565b600061074b8383611e8d565b610d4c827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0083611e1f565b610d4c8282611f80565b6000818152600183016020526040812054611e1757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610705565b506000610705565b611e396001600160a01b038416631aed5a8560e21b611b1c565b15610f8557604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611c389085908590600401612d57565b600061074b836001600160a01b038416611e8d565b600061074b8383612095565b60008181526001830160205260408120548015611f76576000611eb1600183612ddd565b8554909150600090611ec590600190612ddd565b9050808214611f2a576000866000018281548110611ee557611ee5612a33565b9060005260206000200154905080876000018481548110611f0857611f08612a33565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f3b57611f3b612df0565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610705565b6000915050610705565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611fc0576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa820161200057604051630eceab6760e31b815260040160405180910390fd5b7f1fd9e056a24d14c4abc642fcc325992a946906d0dbc57dd70278aaf12842024d820161204057604051634ef6d7fb60e01b815260040160405180910390fd5b60008281526001602052604090206120588282612c59565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051612089919061218a565b60405180910390a25050565b60008260000182815481106120ac576120ac612a33565b9060005260206000200154905092915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006020828403121561210057600080fd5b81356001600160e01b03198116811461074b57600080fd5b6000806040838503121561212b57600080fd5b50508035926020909101359150565b60005b8381101561215557818101518382015260200161213d565b50506000910152565b6000815180845261217681602086016020860161213a565b601f01601f19169290920160200192915050565b60208152600061074b602083018461215e565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156121db576121db61219d565b604052919050565b60006001600160401b038211156121fc576121fc61219d565b5060051b60200190565b600082601f83011261221757600080fd5b8135602061222c612227836121e3565b6121b3565b82815260059290921b8401810191818101908684111561224b57600080fd5b8286015b84811015612266578035835291830191830161224f565b509695505050505050565b6000806040838503121561228457600080fd5b82356001600160401b038082111561229b57600080fd5b6122a786838701612206565b935060208501359150808211156122bd57600080fd5b506122ca85828601612206565b9150509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561232957603f1988860301845261231785835161215e565b945092850192908501906001016122fb565b5092979650505050505050565b60006020828403121561234857600080fd5b5035919050565b80356001600160a01b038116811461236657600080fd5b919050565b6000806040838503121561237e57600080fd5b6123878361234f565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156123d65783516001600160a01b0316835292840192918401916001016123b1565b50909695505050505050565b8035801515811461236657600080fd5b60006001600160401b0382111561240b5761240b61219d565b50601f01601f191660200190565b600082601f83011261242a57600080fd5b8135612438612227826123f2565b81815284602083860101111561244d57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561248257600080fd5b61248b8661234f565b94506124996020870161234f565b9350604086013592506124ae606087016123e2565b915060808601356001600160401b038111156124c957600080fd5b6124d588828901612419565b9150509295509295909350565b600080602083850312156124f557600080fd5b82356001600160401b038082111561250c57600080fd5b818501915085601f83011261252057600080fd5b81358181111561252f57600080fd5b8660208260051b850101111561254457600080fd5b60209290920196919550909350505050565b60006020828403121561256857600080fd5b61074b8261234f565b600082601f83011261258257600080fd5b81356020612592612227836121e3565b82815260059290921b840181019181810190868411156125b157600080fd5b8286015b84811015612266576125c68161234f565b83529183019183016125b5565b600082601f8301126125e457600080fd5b813560206125f4612227836121e3565b82815260059290921b8401810191818101908684111561261357600080fd5b8286015b8481101561226657612628816123e2565b8352918301918301612617565b600082601f83011261264657600080fd5b81356020612656612227836121e3565b82815260059290921b8401810191818101908684111561267557600080fd5b8286015b848110156122665780356001600160401b038111156126985760008081fd5b6126a68986838b0101612419565b845250918301918301612679565b600080600080600060a086880312156126cc57600080fd5b85356001600160401b03808211156126e357600080fd5b6126ef89838a01612571565b9650602088013591508082111561270557600080fd5b61271189838a01612571565b9550604088013591508082111561272757600080fd5b61273389838a01612206565b9450606088013591508082111561274957600080fd5b61275589838a016125d3565b9350608088013591508082111561276b57600080fd5b506124d588828901612635565b6000806040838503121561278b57600080fd5b8235915060208301356001600160401b038111156127a857600080fd5b6122ca85828601612419565b6000806000606084860312156127c957600080fd5b6127d28461234f565b92506020840135915060408401356001600160401b038111156127f457600080fd5b61280086828701612419565b9150509250925092565b6000806040838503121561281d57600080fd5b82356001600160401b038082111561283457600080fd5b61284086838701612206565b9350602085013591508082111561285657600080fd5b506122ca85828601612635565b6020808252825182820181905260009190848201906040850190845b818110156123d65783518352928401929184019160010161287f565b6000806000606084860312156128b057600080fd5b83356001600160401b03808211156128c757600080fd5b6128d387838801612206565b945060208601359150808211156128e957600080fd5b6128f587838801612206565b9350604086013591508082111561290b57600080fd5b5061280086828701612635565b60008060006060848603121561292d57600080fd5b833592506020840135915060408401356001600160401b038111156127f457600080fd5b6000806000806080858703121561296757600080fd5b6129708561234f565b935060208501359250612985604086016123e2565b915060608501356001600160401b038111156129a057600080fd5b6129ac87828801612419565b91505092959194509250565b6000602082840312156129ca57600080fd5b81356001600160401b038111156129e057600080fd5b611adf84828501612206565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b60008251612a2981846020870161213a565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561070557610705612a49565b808202811582820484141761070557610705612a49565b600060018201612a9b57612a9b612a49565b5060010190565b6000808335601e19843603018112612ab957600080fd5b8301803591506001600160401b03821115612ad357600080fd5b602001915036819003821315612ae857600080fd5b9250929050565b8183823760009101908152919050565b60018060a01b03851681528360208201528215156040820152608060608201526000612b2e608083018461215e565b9695505050505050565b805160208201516001600160601b03198082169291906014831015612b675780818460140360031b1b83161693505b505050919050565b600181811c90821680612b8357607f821691505b60208210810361121457634e487b7160e01b600052602260045260246000fd5b6001600160a01b03841681528215156020820152606060408201819052600090612bcf9083018461215e565b95945050505050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a060808201819052600090611b9b9083018461215e565b601f821115610f8557600081815260208120601f850160051c81016020861015612c3a5750805b601f850160051c820191505b81811015610ec257828155600101612c46565b81516001600160401b03811115612c7257612c7261219d565b612c8681612c808454612b6f565b84612c13565b602080601f831160018114612cbb5760008415612ca35750858301515b600019600386901b1c1916600185901b178555610ec2565b600085815260208120601f198616915b82811015612cea57888601518255948401946001909101908401612ccb565b5085821015612d085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8215158152604060208201526000611adf604083018461215e565b805160208083015191908110156112145760001960209190910360031b1b16919050565b828152604060208201526000611adf604083018461215e565b600060208284031215612d8257600080fd5b81516001600160401b03811115612d9857600080fd5b8201601f81018413612da957600080fd5b8051612db7612227826123f2565b818152856020838501011115612dcc57600080fd5b612bcf82602083016020860161213a565b8181038181111561070557610705612a49565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220acb2c2752c7278232f40524fce0802885e08a0106ea1bc1fe58b395ef400e64264736f6c63430008140033";

type ShirtsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShirtsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shirts__factory extends ContractFactory {
  constructor(...args: ShirtsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    _prizePool: AddressLike,
    _price: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _owner,
      _prizePool,
      _price,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    _prizePool: AddressLike,
    _price: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _owner,
      _prizePool,
      _price,
      overrides || {}
    ) as Promise<
      Shirts & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Shirts__factory {
    return super.connect(runner) as Shirts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShirtsInterface {
    return new Interface(_abi) as ShirtsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Shirts {
    return new Contract(address, _abi, runner) as unknown as Shirts;
  }
}
