/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Tickets,
  TicketsInterface,
} from "../../../contracts/tokens/Tickets";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_prizePool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_MsgValueDisallowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "storedData",
        type: "bytes",
      },
    ],
    name: "InvalidExtensionAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InvalidFunctionSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenNameNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenSymbolNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenTypeNotEditable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "authorizedAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LSP7AmountExceedsAuthorizedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LSP7AmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
    ],
    name: "LSP7BatchCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7CannotSendWithAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7CannotUseAddressZeroAsOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "LSP7DecreaseAllowanceNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7DecreasedAllowanceBelowZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7InvalidTransferBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP7NotifyTokenReceiverContractMissingLSP1Interface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP7NotifyTokenReceiverIsEOA",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "LSP7RevokeOperatorNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7TokenContractCannotHoldValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP7TokenOwnerCannotBeOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "NoExtensionFoundForFunctionSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorAllowanceCannotBeIncreasedFromZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
    ],
    name: "OwnableCallerNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableCannotSetZeroAddressAsOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorAuthorizationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "notified",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TicketsMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_MINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "authorizeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "authorizedAmountFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "batchCalls",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "getOperatorsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrizePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "notify",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "force",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002deb38038062002deb833981016040819052620000349162000343565b84848460018084848483816001600160a01b03811662000067576040516306b620db60e21b815260040160405180910390fd5b620000728162000192565b506040805180820190915260048152632936598960e21b6020820152620000bb907feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c9062000200565b620000e77fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18562000200565b620001137f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568462000200565b60408051602081018390526200015c917fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3910160408051601f1981840301815291905262000200565b50506002805460ff191693151593909317909255505050506001600160a01b03939093166080525060a052506200056c92505050565b6000546001600160a01b03828116911614620001fd57600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b60008281526001602052604090206200021a82826200046b565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516200024d919062000537565b60405180910390a25050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200028c57818101518382015260200162000272565b50506000910152565b600082601f830112620002a757600080fd5b81516001600160401b0380821115620002c457620002c462000259565b604051601f8301601f19908116603f01168101908282118183101715620002ef57620002ef62000259565b816040528381528660208588010111156200030957600080fd5b6200031c8460208301602089016200026f565b9695505050505050565b80516001600160a01b03811681146200033e57600080fd5b919050565b600080600080600060a086880312156200035c57600080fd5b85516001600160401b03808211156200037457600080fd5b6200038289838a0162000295565b965060208801519150808211156200039957600080fd5b50620003a88882890162000295565b945050620003b96040870162000326565b9250620003c96060870162000326565b9150608086015190509295509295909350565b600181811c90821680620003f157607f821691505b6020821081036200041257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200046657600081815260208120601f850160051c81016020861015620004415750805b601f850160051c820191505b8181101562000462578281556001016200044d565b5050505b505050565b81516001600160401b0381111562000487576200048762000259565b6200049f81620004988454620003dc565b8462000418565b602080601f831160018114620004d75760008415620004be5750858301515b600019600386901b1c1916600185901b17855562000462565b600085815260208120601f198616915b828110156200050857888601518255948401946001909101908401620004e7565b5085821015620005275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620005588160408501602087016200026f565b601f01601f19169190910160400192915050565b60805160a05161284b620005a0600039600081816104aa015261095a01526000818161043201526109bd015261284b6000f3fe60806040526004361061016a5760003560e01c8063715018a6116100d1578063979024211161008a578063d72fc29a11610064578063d72fc29a146104ee578063dedff9c61461051b578063f0292a031461053b578063f2fde38b14610550576101c5565b8063979024211461048857806398d5fdca1461049b578063b49506fd146104ce576101c5565b8063715018a6146103bb578063760d9bba146103d057806378381670146103f05780637f23690c14610410578063884bf67c146104235780638da5cb5b1461046a576101c5565b806332cb6b0c1161012357806332cb6b0c146102e357806340c10f19146102f857806354f6127f1461030b57806365aeaa95146103385780636963d4381461035857806370a0823114610385576101c5565b806301ffc9a71461020657806318160ddd1461023b5780632bc1da821461025a5780632d7667c91461027c57806330d0dc371461029c578063313ce567146102bc576101c5565b366101c557346000036101ac5760405163e5099ee360e01b81526004016101a39060208082526004908201526000604082015260600190565b60405180910390fd5b604051630e23d6b760e21b815260040160405180910390fd5b600036606060048210156101f057828260405163e5099ee360e01b81526004016101a3929190611bd2565b6101fa8383610570565b80519350602001915050f35b34801561021257600080fd5b50610226610221366004611c01565b610666565b60405190151581526020015b60405180910390f35b34801561024757600080fd5b506003545b604051908152602001610232565b34801561026657600080fd5b5061027a610275366004611d0a565b61069a565b005b34801561028857600080fd5b5061027a610297366004611f3c565b61072a565b3480156102a857600080fd5b5061027a6102b736600461200d565b610819565b3480156102c857600080fd5b506102d16108c1565b60405160ff9091168152602001610232565b3480156102ef57600080fd5b5061024c606481565b61027a61030636600461207b565b6108da565b34801561031757600080fd5b5061032b6103263660046120a5565b610a94565b604051610232919061210e565b34801561034457600080fd5b5061024c610353366004612121565b610a9f565b34801561036457600080fd5b50610378610373366004612154565b610b05565b60405161023291906121c8565b34801561039157600080fd5b5061024c6103a036600461222a565b6001600160a01b031660009081526004602052604090205490565b3480156103c757600080fd5b5061027a610c3b565b3480156103dc57600080fd5b5061027a6103eb366004612245565b610c4f565b3480156103fc57600080fd5b5061027a61040b3660046122b0565b610c77565b61027a61041e3660046122ff565b610d42565b34801561042f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610232565b34801561047657600080fd5b506000546001600160a01b0316610452565b61027a610496366004612345565b610d77565b3480156104a757600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061024c565b3480156104da57600080fd5b5061027a6104e9366004611d0a565b610e37565b3480156104fa57600080fd5b5061050e61050936600461222a565b610e77565b604051610232919061239e565b34801561052757600080fd5b506103786105363660046123eb565b610e9b565b34801561054757600080fd5b5061024c600581565b34801561055c57600080fd5b5061027a61056b36600461222a565b610f45565b606060006105896000356001600160e01b031916610f80565b5090506001600160a01b0381166105c15760405163bb370b2b60e01b81526001600160e01b03196000351660048201526024016101a3565b600080826001600160a01b031634878733346040516020016105e6949392919061241f565b60408051601f19818403018152908290526106009161244a565b60006040518083038185875af1925050503d806000811461063d576040519150601f19603f3d011682016040523d82523d6000602084013e610642565b606091505b50915091508115610657579250610660915050565b80518060208301fd5b92915050565b60006001600160e01b031982166318a5ac0160e31b148061068b575061068b82610ffe565b80610660575061066082611023565b60006106a68433610a9f565b9050806000036106d45760405163cba6e97760e01b81526001600160a01b03851660048201526024016101a3565b60006106e0848361247c565b90506106f0338683600187611061565b60003382856040516020016107079392919061248f565b604051602081830303815290604052905061072286826111d4565b505050505050565b845184518114158061073d575083518114155b80610749575082518114155b80610755575081518114155b156107735760405163263eee8d60e01b815260040160405180910390fd5b60005b8181101561081057610808878281518110610793576107936124bf565b60200260200101518783815181106107ad576107ad6124bf565b60200260200101518784815181106107c7576107c76124bf565b60200260200101518785815181106107e1576107e16124bf565b60200260200101518786815181106107fb576107fb6124bf565b6020026020010151610c4f565b600101610776565b50505050505050565b336001600160a01b0384161480159061083b5750336001600160a01b03851614155b1561087257604051630d292d9960e11b81523360048201526001600160a01b038085166024830152851660448201526064016101a3565b610880838560008585611061565b81156108bb5760008360008360405160200161089e939291906124d5565b60405160208183030381529060405290506108b985826111d4565b505b50505050565b60025460009060ff166108d45750601290565b50600090565b6064816003546108ea919061247c565b111561090957604051635b21dfd360e11b815260040160405180910390fd5b60058161092b846001600160a01b031660009081526004602052604090205490565b610935919061247c565b111561095457604051635b21dfd360e11b815260040160405180910390fd5b61097e817f0000000000000000000000000000000000000000000000000000000000000000612502565b341461099d5760405163020b5e0b60e11b815260040160405180910390fd5b6109b982826000604051806020016040528060008152506111ff565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163460405160006040518083038185875af1925050503d8060008114610a26576040519150601f19603f3d011682016040523d82523d6000602084013e610a2b565b606091505b5050905080610a4d576040516312171d8360e31b815260040160405180910390fd5b604080516001600160a01b0385168152602081018490527f64f70b72cc0e9e53852e2481e43068b546390216d3d062dbe11d9ecf7580835f910160405180910390a1505050565b6060610660826112ee565b6000826001600160a01b0316826001600160a01b031603610ad957506001600160a01b038116600090815260046020526040902054610660565b506001600160a01b03808216600090815260066020908152604080832093861683529290522054610660565b6060816001600160401b03811115610b1f57610b1f611c47565b604051908082528060200260200182016040528015610b5257816020015b6060815260200190600190039081610b3d5790505b50905060005b82811015610c345760008030868685818110610b7657610b766124bf565b9050602002810190610b889190612519565b604051610b96929190612566565b600060405180830381855af49150503d8060008114610bd1576040519150601f19603f3d011682016040523d82523d6000602084013e610bd6565b606091505b509150915081610c0c57805115610bf05780518082602001fd5b604051632ddd30a160e21b8152600481018490526024016101a3565b80848481518110610c1f57610c1f6124bf565b60209081029190910101525050600101610b58565b5092915050565b610c43611390565b610c4d60006113cc565b565b336001600160a01b03861614610c6a57610c6a33868561143a565b6108b985858585856114c8565b336001600160a01b03841614801590610c995750336001600160a01b03851614155b15610cd0576040516398ce294560e01b81523360048201526001600160a01b038085166024830152851660448201526064016101a3565b6000610cdc8585610a9f565b905082811015610cff57604051630ef76c3560e01b815260040160405180910390fd5b828103610d10858783600187611061565b6000858285604051602001610d279392919061248f565b604051602081830303815290604052905061081087826111d4565b610d4a611390565b3415610d695760405163f36ba73760e01b815260040160405180910390fd5b610d73828261164c565b5050565b610d7f611390565b3415610d9e5760405163f36ba73760e01b815260040160405180910390fd5b8051825114610dc057604051633bcc897960e01b815260040160405180910390fd5b8151600003610de2576040516397da5f9560e01b815260040160405180910390fd5b60005b8251811015610e3257610e2a838281518110610e0357610e036124bf565b6020026020010151838381518110610e1d57610e1d6124bf565b602002602001015161164c565b600101610de5565b505050565b610e45338484600185611061565b6000338383604051602001610e5c9392919061248f565b60405160208183030381529060405290506108bb84826111d4565b6001600160a01b038116600090815260056020526040902060609061066090611656565b606081516001600160401b03811115610eb657610eb6611c47565b604051908082528060200260200182016040528015610ee957816020015b6060815260200190600190039081610ed45790505b50905060005b8251811015610f3f57610f1a838281518110610f0d57610f0d6124bf565b60200260200101516112ee565b828281518110610f2c57610f2c6124bf565b6020908102919091010152600101610eef565b50919050565b610f4d611390565b6001600160a01b038116610f74576040516306b620db60e21b815260040160405180910390fd5b610f7d816113cc565b50565b60008080610fa5696773c5a04a6d4300884b60b11b6001600160e01b03198616611663565b90506000610fb2826112ee565b90508051601414158015610fc65750805115155b15610fe657806040516342bfe79f60e01b81526004016101a3919061210e565b610fef81612576565b60601c95600195509350505050565b60006001600160e01b0319821663a918fa6b60e01b14806106605750610660826116b7565b6000806110366301ffc9a760e01b610f80565b5090506001600160a01b0381166110505750600092915050565b61105a81846116ec565b9392505050565b6001600160a01b038416611088576040516331aaf3b360e11b815260040160405180910390fd5b846001600160a01b0316846001600160a01b0316036110ba5760405163dab7504760e01b815260040160405180910390fd5b6001600160a01b038086166000908152600660209081526040808320938816835292905220839055821561115c576001600160a01b038516600090815260056020526040902061110a9085611776565b5082856001600160a01b0316856001600160a01b03167ff772a43bfdf4729b196e3fb54a818b91a2ca6c49d10b2e16278752f9f515c25d8460405161114f919061210e565b60405180910390a46108b9565b6001600160a01b038516600090815260056020526040902061117e908561178b565b50811515856001600160a01b0316856001600160a01b03167f0ebf5762d8855cbe012d2ca42fb33a81175e17c8a8751f8859931ba453bd4167846040516111c5919061210e565b60405180910390a45050505050565b610d73827f386072cc5a58e61263b434c722725f21031cd06e7c552cfaa06db5de8a320dbc836117a0565b6001600160a01b03841661122657604051630d2d5ec360e41b815260040160405180910390fd5b8260036000828254611238919061247c565b90915550506001600160a01b0384166000908152600460205260408120805485929061126590849061247c565b90915550506040516001600160a01b0385169060009033907f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6906112ae908890889088906125ad565b60405180910390a460003360008686856040516020016112d29594939291906125ce565b60405160208183030381529060405290506108b9858483611834565b600081815260016020526040902080546060919061130b90612609565b80601f016020809104026020016040519081016040528092919081815260200182805461133790612609565b80156113845780601f1061135957610100808354040283529160200191611384565b820191906000526020600020905b81548152906001019060200180831161136757829003601f168201915b50505050509050919050565b336113a36000546001600160a01b031690565b6001600160a01b031614610c4d5760405163bf1169c560e01b81523360048201526024016101a3565b6000546001600160a01b03828116911614610f7d57600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b03808316600090815260066020908152604080832093871683529290522054808211156114a25760405163f3a6b69160e01b81526001600160a01b0380851660048301526024820183905285166044820152606481018390526084016101a3565b6108bb83856114b1858561263d565b600060405180602001604052806000815250611061565b6001600160a01b03851615806114e557506001600160a01b038416155b1561150357604051630d2d5ec360e41b815260040160405180910390fd5b6001600160a01b03851660009081526004602052604090205480841115611556576040516308d4794960e01b8152600481018290526001600160a01b0387166024820152604481018590526064016101a3565b6001600160a01b0386166000908152600460205260408120805486929061157e90849061263d565b90915550506001600160a01b038516600090815260046020526040812080548692906115ab90849061247c565b92505081905550846001600160a01b0316866001600160a01b0316336001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6878787604051611603939291906125ad565b60405180910390a4600033878787866040516020016116269594939291906125ce565b604051602081830303815290604052905061164187826118f5565b610810868583611834565b610d738282611920565b6060600061105a83611a35565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c830152918291016040516020818303038152906040529050806116af90612650565b949350505050565b60006001600160e01b031982166318a6a9a560e21b148061066057506301ffc9a760e01b6001600160e01b0319831614610660565b6040516001600160e01b031982166024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b03166301ffc9a760e01b178152825192935060009283928392909183918a617530fa92503d9150600051905082801561175f575060208210155b801561176b5750600081115b979650505050505050565b600061105a836001600160a01b038416611a90565b600061105a836001600160a01b038416611adf565b6117ba6001600160a01b038416631aed5a8560e21b6116ec565b15610e3257604051631aed5a8560e21b81526001600160a01b03841690636bb56a14906117ed9085908590600401612674565b6000604051808303816000875af115801561180c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108bb919081019061268d565b61184583631aed5a8560e21b6116ec565b1561189857604051631aed5a8560e21b81526001600160a01b03841690636bb56a14906117ed907f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c908590600401612674565b81610e32576001600160a01b0383163b156118d1576040516353047ddb60e11b81526001600160a01b03841660048201526024016101a3565b6040516309b091fd60e21b81526001600160a01b03841660048201526024016101a3565b610d73827f429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea836117a0565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611960576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016119a057604051630eceab6760e31b815260040160405180910390fd5b7f1fd9e056a24d14c4abc642fcc325992a946906d0dbc57dd70278aaf12842024d82016119e057604051634ef6d7fb60e01b815260040160405180910390fd5b60008281526001602052604090206119f88282612740565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051611a29919061210e565b60405180910390a25050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561138457602002820191906000526020600020905b815481526020019060010190808311611a715750505050509050919050565b6000818152600183016020526040812054611ad757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610660565b506000610660565b60008181526001830160205260408120548015611bc8576000611b0360018361263d565b8554909150600090611b179060019061263d565b9050808214611b7c576000866000018281548110611b3757611b376124bf565b9060005260206000200154905080876000018481548110611b5a57611b5a6124bf565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611b8d57611b8d6127ff565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610660565b6000915050610660565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600060208284031215611c1357600080fd5b81356001600160e01b03198116811461105a57600080fd5b80356001600160a01b0381168114611c4257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611c8557611c85611c47565b604052919050565b60006001600160401b03821115611ca657611ca6611c47565b50601f01601f191660200190565b600082601f830112611cc557600080fd5b8135611cd8611cd382611c8d565b611c5d565b818152846020838601011115611ced57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611d1f57600080fd5b611d2884611c2b565b92506020840135915060408401356001600160401b03811115611d4a57600080fd5b611d5686828701611cb4565b9150509250925092565b60006001600160401b03821115611d7957611d79611c47565b5060051b60200190565b600082601f830112611d9457600080fd5b81356020611da4611cd383611d60565b82815260059290921b84018101918181019086841115611dc357600080fd5b8286015b84811015611de557611dd881611c2b565b8352918301918301611dc7565b509695505050505050565b600082601f830112611e0157600080fd5b81356020611e11611cd383611d60565b82815260059290921b84018101918181019086841115611e3057600080fd5b8286015b84811015611de55780358352918301918301611e34565b80358015158114611c4257600080fd5b600082601f830112611e6c57600080fd5b81356020611e7c611cd383611d60565b82815260059290921b84018101918181019086841115611e9b57600080fd5b8286015b84811015611de557611eb081611e4b565b8352918301918301611e9f565b600082601f830112611ece57600080fd5b81356020611ede611cd383611d60565b82815260059290921b84018101918181019086841115611efd57600080fd5b8286015b84811015611de55780356001600160401b03811115611f205760008081fd5b611f2e8986838b0101611cb4565b845250918301918301611f01565b600080600080600060a08688031215611f5457600080fd5b85356001600160401b0380821115611f6b57600080fd5b611f7789838a01611d83565b96506020880135915080821115611f8d57600080fd5b611f9989838a01611d83565b95506040880135915080821115611faf57600080fd5b611fbb89838a01611df0565b94506060880135915080821115611fd157600080fd5b611fdd89838a01611e5b565b93506080880135915080821115611ff357600080fd5b5061200088828901611ebd565b9150509295509295909350565b6000806000806080858703121561202357600080fd5b61202c85611c2b565b935061203a60208601611c2b565b925061204860408601611e4b565b915060608501356001600160401b0381111561206357600080fd5b61206f87828801611cb4565b91505092959194509250565b6000806040838503121561208e57600080fd5b61209783611c2b565b946020939093013593505050565b6000602082840312156120b757600080fd5b5035919050565b60005b838110156120d95781810151838201526020016120c1565b50506000910152565b600081518084526120fa8160208601602086016120be565b601f01601f19169290920160200192915050565b60208152600061105a60208301846120e2565b6000806040838503121561213457600080fd5b61213d83611c2b565b915061214b60208401611c2b565b90509250929050565b6000806020838503121561216757600080fd5b82356001600160401b038082111561217e57600080fd5b818501915085601f83011261219257600080fd5b8135818111156121a157600080fd5b8660208260051b85010111156121b657600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561221d57603f1988860301845261220b8583516120e2565b945092850192908501906001016121ef565b5092979650505050505050565b60006020828403121561223c57600080fd5b61105a82611c2b565b600080600080600060a0868803121561225d57600080fd5b61226686611c2b565b945061227460208701611c2b565b93506040860135925061228960608701611e4b565b915060808601356001600160401b038111156122a457600080fd5b61200088828901611cb4565b600080600080608085870312156122c657600080fd5b6122cf85611c2b565b93506122dd60208601611c2b565b92506040850135915060608501356001600160401b0381111561206357600080fd5b6000806040838503121561231257600080fd5b8235915060208301356001600160401b0381111561232f57600080fd5b61233b85828601611cb4565b9150509250929050565b6000806040838503121561235857600080fd5b82356001600160401b038082111561236f57600080fd5b61237b86838701611df0565b9350602085013591508082111561239157600080fd5b5061233b85828601611ebd565b6020808252825182820181905260009190848201906040850190845b818110156123df5783516001600160a01b0316835292840192918401916001016123ba565b50909695505050505050565b6000602082840312156123fd57600080fd5b81356001600160401b0381111561241357600080fd5b6116af84828501611df0565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b6000825161245c8184602087016120be565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066057610660612466565b60018060a01b03841681528260208201526060604082015260006124b660608301846120e2565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038416815260ff831660208201526060604082018190526000906124b6908301846120e2565b808202811582820484141761066057610660612466565b6000808335601e1984360301811261253057600080fd5b8301803591506001600160401b0382111561254a57600080fd5b60200191503681900382131561255f57600080fd5b9250929050565b8183823760009101908152919050565b805160208201516001600160601b031980821692919060148310156125a55780818460140360031b1b83161693505b505050919050565b83815282151560208201526060604082015260006124b660608301846120e2565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a06080820181905260009061176b908301846120e2565b600181811c9082168061261d57607f821691505b602082108103610f3f57634e487b7160e01b600052602260045260246000fd5b8181038181111561066057610660612466565b80516020808301519190811015610f3f5760001960209190910360031b1b16919050565b8281526040602082015260006116af60408301846120e2565b60006020828403121561269f57600080fd5b81516001600160401b038111156126b557600080fd5b8201601f810184136126c657600080fd5b80516126d4611cd382611c8d565b8181528560208385010111156126e957600080fd5b6124b68260208301602086016120be565b601f821115610e3257600081815260208120601f850160051c810160208610156127215750805b601f850160051c820191505b818110156107225782815560010161272d565b81516001600160401b0381111561275957612759611c47565b61276d816127678454612609565b846126fa565b602080601f8311600181146127a2576000841561278a5750858301515b600019600386901b1c1916600185901b178555610722565b600085815260208120601f198616915b828110156127d1578886015182559484019460019091019084016127b2565b50858210156127ef5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204e64e92c86244d184c10055aa3a4e3693e7005c5403ce7a8f3f5e57ce3062dfd64736f6c63430008140033";

type TicketsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tickets__factory extends ContractFactory {
  constructor(...args: TicketsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    _prizePool: AddressLike,
    _price: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _owner,
      _prizePool,
      _price,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    _prizePool: AddressLike,
    _price: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _owner,
      _prizePool,
      _price,
      overrides || {}
    ) as Promise<
      Tickets & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Tickets__factory {
    return super.connect(runner) as Tickets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketsInterface {
    return new Interface(_abi) as TicketsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Tickets {
    return new Contract(address, _abi, runner) as unknown as Tickets;
  }
}
