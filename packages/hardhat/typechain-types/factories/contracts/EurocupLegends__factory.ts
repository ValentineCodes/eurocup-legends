/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EurocupLegends,
  EurocupLegendsInterface,
  IEurocupLegends,
} from "../../contracts/EurocupLegends";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        internalType: "struct IEurocupLegends.Creator[]",
        name: "_creators",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimedPrize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creators",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FeeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPrizeForThisTicket",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTickets",
    type: "error",
  },
  {
    inputs: [],
    name: "NoWinnersYet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    name: "PrizeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[3]",
        name: "winners",
        type: "address[3]",
      },
    ],
    name: "WinnersSet",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_WINNERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ticket",
        type: "address",
      },
    ],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ticket",
        type: "address",
      },
    ],
    name: "getPrize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ticket",
        type: "address",
      },
    ],
    name: "getTicketPrize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[3]",
        name: "_winners",
        type: "address[3]",
      },
      {
        internalType: "uint256[3]",
        name: "_share",
        type: "uint256[3]",
      },
    ],
    name: "setWinners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ccd38038062000ccd8339810160408190526200003491620001dc565b806001600160a01b0381166200006457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006f81620000fb565b5060005b8251811015620000f2576001838281518110620000945762000094620002d1565b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b0390921691909117815591015191015580620000e981620002e7565b91505062000073565b5050506200030f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200018657620001866200014b565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620001b757620001b76200014b565b604052919050565b80516001600160a01b0381168114620001d757600080fd5b919050565b6000806040808486031215620001f157600080fd5b83516001600160401b03808211156200020957600080fd5b818601915086601f8301126200021e57600080fd5b81516020828211156200023557620002356200014b565b62000245818360051b016200018c565b828152818101935060069290921b8401810191898311156200026657600080fd5b938101935b82851015620002b45785858b031215620002855760008081fd5b6200028f62000161565b6200029a86620001bf565b81528583015183820152845293850193928101926200026b565b9650620002c3888201620001bf565b955050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200030857634e487b7160e01b600052601160045260246000fd5b5060010190565b6109ae806200031f6000396000f3fe6080604052600436106100945760003560e01c80637eef2509116100595780637eef2509146101345780638da5cb5b146101545780639966db941461017c578063e5e9b661146101b2578063f2fde38b146101d2576100a4565b80620b46f8146100ad57806329a62a76146100d55780635fc5e020146100ea578063715018a6146100ff57806376602f2f14610114576100a4565b366100a4576100a2346101f2565b005b6100a2346101f2565b3480156100b957600080fd5b506100c2601981565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100c2600381565b3480156100f657600080fd5b506100c2606481565b34801561010b57600080fd5b506100a261032c565b34801561012057600080fd5b506100a261012f3660046107ef565b610340565b34801561014057600080fd5b506100c261014f366004610840565b610444565b34801561016057600080fd5b506000546040516001600160a01b0390911681526020016100cc565b34801561018857600080fd5b506100c261019736600461086a565b6001600160a01b031660009081526005602052604090205490565b3480156101be57600080fd5b506100a26101cd36600461086a565b61056d565b3480156101de57600080fd5b506100a26101ed36600461086a565b610723565b600060646102016019846108a2565b61020b91906108b9565b60015490915060005b8181101561032657600060018281548110610231576102316108db565b600091825260208083206040805180820190915260029093020180546001600160a01b031683526001015490820181905290925060649061027290876108a2565b61027c91906108b9565b9050600082600001516001600160a01b03168260405160006040518083038185875af1925050503d80600081146102cf576040519150601f19603f3d011682016040523d82523d6000602084013e6102d4565b606091505b505090508061031057825160405163373a7d4360e11b81526001600160a01b039091166004820152602481018390526044015b60405180910390fd5b505050808061031e906108f1565b915050610214565b50505050565b610334610761565b61033e600061078e565b565b610348610761565b60034760005b600381101561040657600085826003811061036b5761036b6108db565b60200201602081019061037e919061086a565b905060006064868460038110610396576103966108db565b6020020135856103a691906108a2565b6103b091906108b9565b905081600284600381106103c6576103c66108db565b0180546001600160a01b0319166001600160a01b0392831617905591909116600090815260056020526040902055806103fe816108f1565b91505061034e565b507f60f4d73182a956a559d177842626b4743585a36652a74d3eb1500e4479ac06ea84604051610436919061090a565b60405180910390a150505050565b6001600160a01b038181166000818152600560205260408082205490516370a0823160e01b815293861660048501529092909183916370a0823190602401602060405180830381865afa15801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c3919061094c565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610529919061094c565b90508160000361054c576040516366f3ef9b60e01b815260040160405180910390fd5b8061055784846108a2565b61056191906108b9565b93505050505b92915050565b6001600160a01b0381166105945760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b03811660009081526005602052604081205490036105cc5760405163d937573f60e01b815260040160405180910390fd5b3360009081526006602090815260408083206001600160a01b038516845290915290205460ff16156106115760405163048798a960e41b815260040160405180910390fd5b600061061d3383610444565b6001600160a01b038316600090815260056020526040902054909150610644908290610965565b6001600160a01b0383166000818152600560209081526040808320949094553380835260068252848320938352929052828120805460ff19166001179055915183908381818185875af1925050503d80600081146106be576040519150601f19603f3d011682016040523d82523d6000602084013e6106c3565b606091505b50509050806106e5576040516312171d8360e31b815260040160405180910390fd5b60408051338152602081018490527f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770910160405180910390a1505050565b61072b610761565b6001600160a01b03811661075557604051631e4fbdf760e01b815260006004820152602401610307565b61075e8161078e565b50565b6000546001600160a01b0316331461033e5760405163118cdaa760e01b8152336004820152602401610307565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806060810183101561056757600080fd5b60008060c0838503121561080257600080fd5b61080c84846107de565b915061081b84606085016107de565b90509250929050565b80356001600160a01b038116811461083b57600080fd5b919050565b6000806040838503121561085357600080fd5b61085c83610824565b915061081b60208401610824565b60006020828403121561087c57600080fd5b61088582610824565b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105675761056761088c565b6000826108d657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016109035761090361088c565b5060010190565b60608101818360005b6003811015610943576001600160a01b0361092d83610824565b1683526020928301929190910190600101610913565b50505092915050565b60006020828403121561095e57600080fd5b5051919050565b818103818111156105675761056761088c56fea264697066735822122086d7e2b39db642d15a6e00c077083034191d98bfd674b5b2051922a27de479d164736f6c63430008140033";

type EurocupLegendsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EurocupLegendsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EurocupLegends__factory extends ContractFactory {
  constructor(...args: EurocupLegendsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _creators: IEurocupLegends.CreatorStruct[],
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_creators, _owner, overrides || {});
  }
  override deploy(
    _creators: IEurocupLegends.CreatorStruct[],
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_creators, _owner, overrides || {}) as Promise<
      EurocupLegends & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EurocupLegends__factory {
    return super.connect(runner) as EurocupLegends__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EurocupLegendsInterface {
    return new Interface(_abi) as EurocupLegendsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EurocupLegends {
    return new Contract(address, _abi, runner) as unknown as EurocupLegends;
  }
}
