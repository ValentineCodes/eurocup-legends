/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IECL, IECLInterface } from "../../../contracts/interfaces/IECL";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isMintOpen",
        type: "bool",
      },
    ],
    name: "MintStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    name: "PrizeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[3]",
        name: "winners",
        type: "address[3]",
      },
    ],
    name: "WinnersSet",
    type: "event",
  },
] as const;

export class IECL__factory {
  static readonly abi = _abi;
  static createInterface(): IECLInterface {
    return new Interface(_abi) as IECLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IECL {
    return new Contract(address, _abi, runner) as unknown as IECL;
  }
}
